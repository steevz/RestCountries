{"ast":null,"code":"var _jsxFileName = \"/home/steevz/Projects/RestCountries/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport CountrySearch from './components/CountrySearch';\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`;\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`;\n\nconst App = () => {\n  const [drzave, setDrzave] = useState([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }]);\n  const [q, setQ] = useState(\"\");\n  const [s, setS] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(res => {\n      setDrzave(res.data);\n    });\n  }, [setDrzave]);\n\n  const Search = country => {\n    return country.filter(country => country.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n  }; // unikatne regije (ne ponavljaju se iz niza objekata {drzave})\n\n\n  const unique = [...new Set(drzave.map(item => item.region))];\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\\u2315   Search for a country\",\n    value: q,\n    onChange: e => setQ(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: 'default',\n    onChange: e => {\n      setS(e.target.value);\n      Search(drzave);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    disabled: true,\n    value: 'default',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Sort by region: \"), unique.map(region => /*#__PURE__*/React.createElement(Option, {\n    key: region,\n    value: region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, region)))), /*#__PURE__*/React.createElement(CountrySearch, {\n    drzave: Search(drzave),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/steevz/Projects/RestCountries/src/App.tsx"],"names":["React","useState","useEffect","axios","styled","Header","CountrySearch","Input","input","Select","select","Wrapper","div","Option","option","App","drzave","setDrzave","flag","name","population","region","capital","q","setQ","s","setS","get","then","res","data","Search","country","filter","toLowerCase","indexOf","unique","Set","map","item","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport Header from './components/Header'\nimport CountrySearch from './components/CountrySearch'\n\ninterface CountryCard {\n  flag: string\n  name: string\n  population: number\n  region: string\n  capital: string\n}\n\n\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`\n\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`\n\nconst App:React.FC = () => {\n\n  const [drzave, setDrzave] = useState<Array<CountryCard>>([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }])\n\n  const [q,setQ] = useState(\"\")\n  const [s, setS] = useState(\"\")\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n         .then((res) => {\n             setDrzave(res.data) \n         })\n  },[setDrzave])\n\n\n  const Search = (country: Array<CountryCard>) => {\n       return country.filter((country: any) => \n       country.name.toLowerCase().indexOf(q.toLowerCase()) > -1 )\n  }\n\n\n  // unikatne regije (ne ponavljaju se iz niza objekata {drzave})\n  const unique = [...new Set(drzave.map(item => item.region))]; \n\n\n\n  return (\n    <Wrapper>\n      <Header />\n      <Wrapper>\n        <Input placeholder=\"âŒ•   Search for a country\" value={q} onChange={(e:any) => setQ(e.target.value )}/> \n        <Select defaultValue={'default'} onChange={(e: any) => {\n          setS(e.target.value)\n          Search(drzave)\n          }}>\n        <Option  disabled value={'default'}>Sort by region: </Option>\n        {unique.map( (region: any) => \n        <Option\n                key={ region }\n                value={ region }>\n                { region }\n        </Option> )}\n        </Select>\n      </Wrapper>\n      <CountrySearch drzave={Search(drzave) } />\n    </Wrapper>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/steevz/Projects/RestCountries/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport CountrySearch from './components/CountrySearch';\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`;\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`;\n\nconst App = () => {\n  const [drzave, setDrzave] = useState([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }]);\n  const [q, setQ] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(res => {\n      setDrzave(res.data);\n    });\n  }, [setDrzave]);\n\n  const Search = country => {\n    return country.filter(country => country.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\\u2315   Search for a country\",\n    value: q,\n    onChange: e => setQ(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"cars\",\n    id: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, drzave.map(drzava => /*#__PURE__*/React.createElement(Option, {\n    key: drzava.id,\n    value: drzava.region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, Array.from(new Set([drzava.region])))))), /*#__PURE__*/React.createElement(CountrySearch, {\n    drzave: Search(drzave),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/steevz/Projects/RestCountries/src/App.tsx"],"names":["React","useState","useEffect","axios","styled","Header","CountrySearch","Input","input","Select","select","Wrapper","div","Option","option","App","drzave","setDrzave","flag","name","population","region","capital","q","setQ","get","then","res","data","Search","country","filter","toLowerCase","indexOf","e","target","value","map","drzava","id","Array","from","Set"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAWA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM;;;;;;;;;;;;;;;;CAA3B;AAkBA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;;;;;;;;;CAA7B;AAmBA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;;CAA3B;AAWA,MAAMC,MAAM,GAAGT,MAAM,CAACU,MAAO;;;;;;;CAA7B;;AASA,MAAMC,GAAY,GAAG,MAAM;AAEzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAqB,CAAC;AACxDiB,IAAAA,IAAI,EAAE,EADkD;AAExDC,IAAAA,IAAI,EAAE,EAFkD;AAGxDC,IAAAA,UAAU,EAAE,CAH4C;AAIxDC,IAAAA,MAAM,EAAE,EAJgD;AAKxDC,IAAAA,OAAO,EAAE;AAL+C,GAAD,CAArB,CAApC;AAQA,QAAM,CAACC,CAAD,EAAGC,IAAH,IAAWvB,QAAQ,CAAC,EAAD,CAAzB;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACsB,GAAN,CAAU,sCAAV,EACMC,IADN,CACYC,GAAD,IAAS;AACXV,MAAAA,SAAS,CAACU,GAAG,CAACC,IAAL,CAAT;AACH,KAHN;AAID,GALQ,EAKP,CAACX,SAAD,CALO,CAAT;;AAQA,QAAMY,MAAM,GAAIC,OAAD,IAAiC;AAC3C,WAAOA,OAAO,CAACC,MAAR,CAAgBD,OAAD,IACtBA,OAAO,CAACX,IAAR,CAAaa,WAAb,GAA2BC,OAA3B,CAAmCV,CAAC,CAACS,WAAF,EAAnC,IAAsD,CAAC,CADhD,CAAP;AAEJ,GAHD;;AAQA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,+BAAnB;AAA8C,IAAA,KAAK,EAAET,CAArD;AAAwD,IAAA,QAAQ,EAAGW,CAAD,IAAWV,IAAI,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCpB,MAAM,CAACqB,GAAP,CAAaC,MAAD,iBACb,oBAAC,MAAD;AACQ,IAAA,GAAG,EAAEA,MAAM,CAACC,EADpB;AAEQ,IAAA,KAAK,EAAGD,MAAM,CAACjB,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGUmB,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,CAACJ,MAAM,CAACjB,MAAR,CAAR,CAAX,CAHV,CADC,CADD,CAFF,CAFF,eAaE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEQ,MAAM,CAACb,MAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CA9CD;;AAgDA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport Header from './components/Header'\nimport CountrySearch from './components/CountrySearch'\n\ninterface CountryCard {\n  flag: string\n  name: string\n  population: number\n  region: string\n  capital: string\n}\n\n\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`\n\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`\n\nconst App:React.FC = () => {\n\n  const [drzave, setDrzave] = useState<Array<CountryCard>>([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }])\n\n  const [q,setQ] = useState(\"\")\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n         .then((res) => {\n             setDrzave(res.data) \n         })\n  },[setDrzave])\n\n\n  const Search = (country: Array<CountryCard>) => {\n       return country.filter((country: any) => \n       country.name.toLowerCase().indexOf(q.toLowerCase()) > -1 )\n  }\n\n  \n\n\n  return (\n    <Wrapper>\n      <Header />\n      <Wrapper>\n        <Input placeholder=\"âŒ•   Search for a country\" value={q} onChange={(e:any) => setQ(e.target.value )}/> \n        <Select name=\"cars\" id=\"cars\">\n        {drzave.map( (drzava: any) => \n        <Option\n                key={drzava.id}\n                value={ drzava.region }>\n                { Array.from(new Set([drzava.region])) }\n        </Option> )}\n        </Select>\n      </Wrapper>\n      <CountrySearch drzave={Search(drzave)} />\n    </Wrapper>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
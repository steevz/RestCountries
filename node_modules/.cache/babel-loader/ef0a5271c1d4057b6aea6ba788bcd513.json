{"ast":null,"code":"var _jsxFileName = \"/home/steevz/Projects/RestCountries/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport CountrySearch from './components/CountrySearch';\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`;\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`;\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`;\n\nconst App = () => {\n  const [drzave, setDrzave] = useState([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }]);\n  const [q, setQ] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(res => {\n      setDrzave(res.data);\n    });\n  }, [setDrzave]);\n\n  const Search = country => {\n    return country.filter(country => country.name.toLowerCase().indexOf(q.toLowerCase()) > -1);\n  };\n\n  const filter = (tag, arr) => arr.filter(co => co.region === tag);\n\n  console.log(filter(drzave.region, drzave));\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\\u2315   Search for a country\",\n    value: q,\n    onChange: e => setQ(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"cars\",\n    id: \"cars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, drzave.map(drzava => /*#__PURE__*/React.createElement(Option, {\n    key: drzava.id,\n    value: drzava.region,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, drzava.region)))), /*#__PURE__*/React.createElement(CountrySearch, {\n    drzave: Search(drzave),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/steevz/Projects/RestCountries/src/App.tsx"],"names":["React","useState","useEffect","axios","styled","Header","CountrySearch","Input","input","Select","select","Wrapper","div","Option","option","App","drzave","setDrzave","flag","name","population","region","capital","q","setQ","get","then","res","data","Search","country","filter","toLowerCase","indexOf","tag","arr","co","console","log","e","target","value","map","drzava","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport Header from './components/Header'\nimport CountrySearch from './components/CountrySearch'\n\ninterface CountryCard {\n  flag: string\n  name: string\n  population: number\n  region: string\n  capital: string\n}\n\n\nconst Input = styled.input`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 40%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 2em;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Select = styled.select`\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    width: 30%;\n    height: 50px;\n    border: none;\n    margin: 1em;\n    outline: none;\n    color: white;\n    padding: 0 1em;\n    margin-left: auto;\n\n    &::placeholder {\n        color: white;\n    }\n`\n\nconst Wrapper = styled.div`\n    max-width: 1024px;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    background-color: hsl(209,23%,22%);\n    display: flex;\n    flex-wrap: wrap;\n    margin: 1em auto;\n`\n\nconst Option = styled.option`\n    border: 0;\n    background-color: hsl(207,26%,17%);\n    font-family: 'Nunito Sans';\n    font-weight: 600;\n    font-size: 16px;\n    outline: none;\n`\n\nconst App:React.FC = () => {\n\n  const [drzave, setDrzave] = useState<Array<any>>([{\n    flag: \"\",\n    name: \"\",\n    population: 0,\n    region: \"\",\n    capital: \"\"\n  }])\n\n  const [q,setQ] = useState(\"\")\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n         .then((res) => {\n             setDrzave(res.data) \n         })\n  },[setDrzave])\n\n\n  const Search = (country: Array<any>) => {\n       return country.filter((country: any) => \n       country.name.toLowerCase().indexOf(q.toLowerCase()) > -1 )\n  }\n\n\n  const filter = (tag: string, arr: Array<any>) => arr.filter(co => co.region === tag);\n\n console.log(filter(drzave.region, drzave))\n\n  return (\n    <Wrapper>\n      <Header />\n      <Wrapper>\n        <Input placeholder=\"âŒ•   Search for a country\" value={q} onChange={(e:any) => setQ(e.target.value )}/> \n        <Select name=\"cars\" id=\"cars\">\n        {drzave.map( (drzava: any) => \n        <Option\n                key={ drzava.id }\n                value={ drzava.region }>\n                { drzava.region }\n        </Option> )}\n        </Select>\n      </Wrapper>\n      <CountrySearch drzave={Search(drzave)} />\n    </Wrapper>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}